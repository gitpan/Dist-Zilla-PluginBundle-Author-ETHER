;;; this file was automatically generated from
;;; Dist-Zilla-PluginBundle-Author-ETHER-0.035/profiles/github/build_templates/profile.ini

[TemplateModule/:DefaultModuleMaker]
template = Module.pm

; not used, because we want to template bits of this.
; [DistINI]
; append_file = plugins.ini

[GatherDir::Template]
root = skel

[GenerateFile / README.md]
filename = README.md
is_template = 0
content =

[GenerateFile / LICENSE]
filename = LICENSE
is_template = 0
content =

[GenerateFile / CONTRIBUTING]
filename = CONTRIBUTING
is_template = 0
content =

; we can't just include this file in skel because
; File::ShareDir::Install::_scan_share_dir unconditionally skips all dotfiles.
[GenerateFile / gitignore]
filename = .gitignore
is_template = 1
content = /.build/
content = !.gitignore
content = /{{$dist->name}}-*

[GenerateFile / Changes]
filename = Changes
is_template = 1 ; needed for whitespace
content = Revision history for {{ '{{$dist->name}}' }}
content =
content = {{ '{{$NEXT}}' }}
content = {{ '          - Initial release.' }}

[GenerateFile / clean-namespaces.t]
filename = xt/release/clean-namespaces.t
is_template = 1
content = use strict;
content = use warnings FATAL => 'all';
content =
content = use Test::More;
content = use Test::CleanNamespaces;
content =
content = namespaces_clean(grep { !/^{{ $dist->name =~ s/-/::/gr }}::Conflicts$/ } Test::CleanNamespaces->find_modules);
content =
content = done_testing;

[Git::Init]
commit_message = initial commit%n%nvia [Git::Init] in Dist-Zilla-PluginBundle-Author-ETHER-0.035, github profile.
config = user.email ether@cpan.org
; we don't configure a repository here because [GitHub::Create] won't do its
; thing if there is already a remote spec added.

[GitHub::Create]
:version = 0.35
prompt = 1
has_issues = 0

; this will fail if we said no to creating the github repository
[Git::PushInitial]

[Run::AfterMint]
run = echo "You should now do: cd %d"
